{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/clip-display.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/archive/archive.component.css","webpack:///./src/app/components/archive/archive.component.html","webpack:///./src/app/components/archive/archive.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/live/live.component.css","webpack:///./src/app/components/live/live.component.html","webpack:///./src/app/components/live/live.component.ts","webpack:///./src/app/components/training/training.component.css","webpack:///./src/app/components/training/training.component.html","webpack:///./src/app/components/training/training.component.ts","webpack:///./src/app/mock-channels.ts","webpack:///./src/app/services/channel.service.ts","webpack:///./src/app/services/clip.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LiveComponent } from './components/live/live.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ArchiveComponent } from './components/archive/archive.component';\nimport { TrainingComponent } from './components/training/training.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'live', component: LiveComponent },\n  { path: 'archive', component: ArchiveComponent },\n  { path: 'training', component: TrainingComponent },\n  { path: 'about', component: AboutComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \".no-margin{\\n    margin: 0px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md bg-secondary navbar-dark\\\">\\n  <div class=\\\"container no-margin\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n      <span class=\\\"fa fa-space-shuttle\\\"></span>&nbsp;{{title}}</a>\\n    <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/live\\\">Live</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/archive\\\">Archive</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/training\\\">Training</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/about\\\">About</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<br/>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Scribe';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LiveComponent } from './components/live/live.component';\nimport { ArchiveComponent } from './components/archive/archive.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { TrainingComponent } from './components/training/training.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './services/in-memory-data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LiveComponent,\n    ArchiveComponent,\n    AboutComponent,\n    HomeComponent,\n    TrainingComponent\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Clip } from './clip';\n\nexport class ClipDisplay {\n  clip: Clip;\n  editing: boolean;\n  channel_name: string;\n\n  constructor(newClip: Clip, ChannelName: string) {\n    this.clip = newClip;\n    this.editing = false;\n    this.channel_name = ChannelName;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h1 class=\\\"text-center display-3 text-primary\\\">About - SCRIBE</h1>\\n        <p class=\\\"\\\">SCRIBE is an interface for AUDREY; an advanced AI developed by JPL. This application was developed by James Bearss, Jonothan Brownlee, Morgan Cole, and Andrew Gates as their Senior Design project at UCF.</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\"> Search</div>\\n          <div class=\\\"card-body\\\">\\n            <form class=\\\"\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  <span class=\\\"fa fa-comment\\\"></span>&nbsp;Text</label>\\n                <input id=\\\"test\\\" type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Text\\\"> </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  <span class=\\\"fa fa-user\\\"></span>&nbsp;Speaker</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Speaker\\\"> </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  <span class=\\\"fa fa-volume-up\\\"></span>&nbsp;Channel</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Channel\\\"> </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  <span class=\\\"fa fa-clock-o\\\"></span>&nbsp;Time Range</label>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Start\\\"> </div>&nbsp;-&nbsp;\\n                  <div class=\\\"col\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"End\\\"> </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>\\n                  <span class=\\\"fa fa-calendar\\\"></span>&nbsp;Date Range</label>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Start\\\"> </div> &nbsp;-&nbsp;\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"End\\\"> </div>\\n                </div>\\n              </div>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\">\\n                <span class=\\\"fa fa-search\\\"></span>&nbsp;Search</button>\\n            </form>\\n          </div>\\n        </div>\\n        <br>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.css']\n})\nexport class ArchiveComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\"> Live Stream</div>\\n          <div class=\\\"card-body\\\">\\n            <a routerLink=\\\"/live\\\">\\n              <h4>Listen to live EVS channels.</h4>\\n            </a>\\n            <p>This will let you listen to live streams of EVS channels. You can select multiple channels at once, correct the AUDREY-interpreted text, and search through the log of what you've listened to.</p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">Archived Streams</div>\\n          <div class=\\\"card-body\\\">\\n            <a routerLink=\\\"/archive\\\">\\n              <h4>Listen to archived EVS audio.</h4>\\n            </a>\\n            <p>This will let you listen to archived streams of EVS channels. You can filter through the archived data by text, date/time, speaker, and channel. You can also make corrections to the AUDREY-interpreted text.</p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">Training</div>\\n          <div class=\\\"card-body\\\">\\n            <a routerLink=\\\"/training\\\">\\n              <h4>Train AUDREY</h4>\\n            </a>\\n            <p>This will let you use the microphone on your computer, and see the AUDREY-interpreted text as it is generated. You can then make corrections to any errors in the interpreted text.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".channel-button{\\n    width:100%; \\n    font-size:30px; \\n    margin-bottom:10px;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"offset-md-1 col-md-10\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\"> Live Stream <button (click)=\\\"getClips()\\\" class=\\\"pull-right btn btn-primary\\\"><span class=\\\"fa fa-refresh\\\"></span></button></div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-2\\\">\\n            <button class=\\\"channel-button btn btn-primary text-center\\\" (click)=\\\"open(addChannelModal)\\\">\\n              <span class=\\\"fa fa-plus\\\"></span>\\n            </button>\\n            <div *ngFor=\\\"let channel of activeChannels\\\">\\n                <button class=\\\"channel-button btn text-center\\\" [ngClass]=\\\"getColor(channel.id)\\\" (click)=\\\"toggleChannel(channel)\\\">{{channel.name}}</button>\\n            </div>\\n          </div>\\n          <div class=\\\"col-10\\\" style=\\\"max-height:70vh; overflow-y: scroll;\\\">\\n\\n            <!-- Display details for each clip -->\\n\\n            <div *ngFor=\\\"let clipDisplay of clipDisplays\\\">\\n\\n              <div *ngIf=\\\"shouldDisplayClip(clipDisplay)\\\" class=\\\"card\\\" [ngClass]=\\\"getColor(clipDisplay.clip.channel_id)\\\" style=\\\"margin-bottom:10px\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-1 d-none d-lg-block\\\">\\n                      <img class=\\\"img\\\" style=\\\"width:100%\\\" src=\\\"https://dt.azadicdn.com/wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png?200\\\">\\n                    </div>\\n                    <div class=\\\"col-12 col-lg-11\\\">\\n                      <textarea *ngIf=\\\"clipDisplay.editing\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"clipDisplay.clip.text\\\"></textarea>\\n                      <div *ngIf=\\\"!clipDisplay.editing\\\">{{clipDisplay.clip.text}}</div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                  <span class=\\\"fa fa-user\\\"></span>&nbsp;Speaker: {{clipDisplay.clip.speaker}}&nbsp;&nbsp;&nbsp;\\n                  <span class=\\\"fa fa-volume-up\\\"></span>&nbsp;Channel: {{clipDisplay.channel_name}}&nbsp;&nbsp;&nbsp;\\n                  <span class=\\\"fa fa-time\\\">{{clipDisplay.clip.created_at}}</span>\\n                  <div class=\\\"pull-right\\\">\\n\\n                    <!-- Make/Save Correction Buttons -->\\n                    <button *ngIf=\\\"!clipDisplay.editing\\\" class=\\\"btn btn-primary\\\" (click)=\\\"makeCorrection(clipDisplay)\\\"> Make Correction&nbsp;\\n                      <span class=\\\"fa fa-edit\\\"></span>\\n                    </button>\\n                    <button *ngIf=\\\"clipDisplay.editing\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveCorrection(clipDisplay)\\\"> Save Correction&nbsp;\\n                      <span class=\\\"fa fa-edit\\\"></span>\\n                    </button>\\n\\n                    <!-- Play Clip Button -->\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"playClip(clipDisplay)\\\" style=\\\"margin-left:5px\\\">Play &nbsp;\\n                      <span class=\\\"fa fa-play\\\"></span>\\n                    </button>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-2\\\">\\n    <div *ngIf=\\\"showNotification\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeNotification()\\\">×</button>\\n      <h4 class=\\\"alert-heading\\\">Corrections saved</h4>\\n      <p class=\\\"mb-0\\\">The corrections have been saved to the database.</p>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<ng-template #addChannelModal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Add Channel</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <form class=\\\"form-inline\\\">\\n            <div class=\\\"col\\\" style=\\\"padding:0px\\\">\\n              <div class=\\\"input-group\\\">\\n                <input [(ngModel)]=\\\"channelSearchInput\\\" (keyup.enter)=\\\"searchForChannel()\\\" name=\\\"channelSearchInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Terms\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"searchForChannel()\\\">\\n                    <span class=\\\"fa fa-search\\\"></span>&nbsp;Search </button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n          <br>\\n          <div class=\\\"card\\\">\\n            <table class=\\\"table\\\" style=\\\"margin-bottom:0px\\\">\\n              <thead>\\n                <tr>\\n                  <th style=\\\"width:90%\\\">Channel Name</th>\\n                  <th style=\\\"width:10%\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let channel of channelSearchResults\\\">\\n                  <td>{{channel.name}}</td>\\n                  <td>\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"addActiveChannel(channel)\\\">\\n                      <span class=\\\"fa fa-plus\\\"></span>&nbsp;Add </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"c('Save click')\\\">Close</button>\\n    </div>\\n  </ng-template>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Clip } from \"src/app/classes/clip\";\nimport { ClipDisplay } from \"src/app/classes/clip-display\";\nimport { Channel } from \"src/app/classes/channel\";\nimport { ChannelService } from \"src/app/services/channel.service\";\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ClipService } from \"src/app/services/clip.service\";\n\n@Component({\n  selector: \"app-live\",\n  templateUrl: \"./live.component.html\",\n  styleUrls: [\"./live.component.css\"]\n})\nexport class LiveComponent implements OnInit {\n  channelSearchInput: string;\n  closeResult: string;\n  activeChannels: Channel[];\n  channelSearchResults: Channel[];\n  clipDisplays: ClipDisplay[];\n  showNotification = false;\n\n  constructor(\n    private channelService: ChannelService,\n    private clipService: ClipService,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit() {\n    this.activeChannels = [];\n    this.clipDisplays = [];\n  }\n\n  open(content) {\n    this.modalService.open(content).result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n\n  addActiveChannel(channel: Channel): void {\n    if (this.activeChannels.filter(x => x.id === channel.id).length === 0) {\n      this.activeChannels.push(channel);\n      this.getClips();\n    }\n  }\n  searchForChannel(): void {\n    this.channelService\n      .getChannels(this.channelSearchInput)\n      .subscribe(channels => {\n        this.channelSearchResults = channels;\n      });\n  }\n\n  getClips(): void {\n    this.clipDisplays = [];\n\n    this.activeChannels.forEach(channel => {\n      if (channel !== null) {\n\n        this.clipService.getClips(channel).subscribe(response => response.data.forEach(clip => {\n          this.clipDisplays = this.clipDisplays.concat(\n            new ClipDisplay(clip, channel.name)\n          );\n        }));\n      }\n    });\n  }\n\n  getColor(channel: number): string {\n    switch (channel) {\n      case 1: {\n        return \"bg-secondary\";\n      }\n      case 2: {\n        return \"bg-primary\";\n      }\n      case 3: {\n        return \"bg-light\";\n      }\n      case 4: {\n        return \"bg-dark\";\n      }\n    }\n  }\n\n  toggleChannel(channel: Channel): void {\n    const c = this.findChannelFromId(channel.id);\n    c.displayed = !c.displayed;\n  }\n\n  findChannelFromId(channel_id: number): Channel {\n    return this.activeChannels.filter(x => x.id === channel_id)[0];\n  }\n\n  shouldDisplayClip(clipDisplay: ClipDisplay): boolean {\n    var channel = this.findChannelFromId(clipDisplay.clip.channel_id);\n    if (channel !== undefined && channel !== null) {\n      return channel.displayed;\n    }\n    return false;\n  }\n\n  makeCorrection(clipDisplay: ClipDisplay): void {\n    clipDisplay.editing = true;\n  }\n\n  saveCorrection(clipDisplay: ClipDisplay): void {\n    clipDisplay.editing = false;\n    // this.showNotification = true;\n    this.clipService.saveClip(clipDisplay.clip);\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  closeNotification(): void {\n    this.showNotification = false;\n  }\n\n  playClip(clipDisplay: ClipDisplay): void {\n    const audio = new Audio();\n    audio.src = clipDisplay.clip.path_to_file;\n    audio.load();\n    audio.play();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"py-1\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <!-- <div class=\\\"col-md-12\\\"> \\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">×</button>\\n          <h4 class=\\\"alert-heading\\\">Corrections saved</h4>\\n          <p class=\\\"mb-0\\\">The corrections have been saved to the database.</p>\\n        </div>\\n      </div>-->\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"p-0\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\"> Live Stream</div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-11 col-md-12\\\" style=\\\"max-height:70vh; overflow-y: scroll;\\\">\\n                <div class=\\\"card bg-light\\\" style=\\\"margin-bottom:10px\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-1 d-none d-lg-block\\\">\\n                        <img class=\\\"img\\\" style=\\\"width:100%\\\" src=\\\"https://dt.azadicdn.com/wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png?200\\\"> </div>\\n                      <div class=\\\"col-12 col-lg-11\\\"> Lorem ipsum dolor sit amet, malorum aliquid docendi mei ea, causae tacimates has ex. </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"card-footer\\\">\\n                    <span class=\\\"fa fa-user\\\"></span>&nbsp;Speaker: James Bearss&nbsp;&nbsp;&nbsp;\\n                    <span class=\\\"fa fa-time\\\">12:48 PM</span>\\n                    <div class=\\\"pull-right\\\">\\n                      <button class=\\\"btn btn-primary\\\"> Make Correction&nbsp;\\n                        <span class=\\\"fa fa-edit\\\" style=\\\"\\\"></span>\\n                      </button>\\n                      <button class=\\\"btn btn-primary\\\">Play &nbsp;\\n                        <span class=\\\"fa fa-play\\\"></span>\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"card bg-light\\\" style=\\\"margin-bottom: 10px;\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-1 d-none d-lg-block\\\">\\n                        <img class=\\\"img\\\" style=\\\"width:100%\\\" src=\\\"https://dt.azadicdn.com/wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png?200\\\"> </div>\\n                      <div class=\\\"col-12 col-lg-11\\\"> Lorem ipsum dolor sit amet, malorum aliquid docendi mei ea, causae tacimates has ex. </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"card-footer\\\" contenteditable=\\\"true\\\">\\n                    <span class=\\\"fa fa-user\\\"></span>&nbsp;Speaker: James Bearss&nbsp;&nbsp;&nbsp;\\n                    <span class=\\\"fa fa-time\\\">12:48 PM</span>\\n                    <div class=\\\"pull-right\\\">\\n                      <button class=\\\"btn btn-primary\\\"> Make Correction&nbsp;\\n                        <span class=\\\"fa fa-edit\\\" style=\\\"\\\"></span>\\n                      </button>\\n                      <button class=\\\"btn btn-primary\\\">Play &nbsp;\\n                        <span class=\\\"fa fa-play\\\"></span>\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button class=\\\"btn btn-primary pull-right\\\" data-target=\\\"#addChannelModal\\\" data-toggle=\\\"modal\\\">\\n              <span class=\\\"fa fa-microphone\\\"></span>&nbsp;Speak </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"modal fade \\\" id=\\\"addChannelModal\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Speak to AUDREY</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <span class=\\\"fa fa-microphone\\\" style=\\\"font-size:70px\\\"></span>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Channel } from './classes/channel';\n\nexport const CHANNELS: Channel[] = [\n  {\n    id: 1,\n    name: 'Control',\n    displayed: true,\n    subSystem: 'Hyper',\n    location: 'NPPF',\n    program: 'EGS'\n  },\n  {\n    id: 2,\n    name: 'Ground',\n    displayed: true,\n    subSystem: 'Hyper',\n    location: 'NPPF',\n    program: 'EGS'\n  },\n  {\n    id: 3,\n    name: 'Crew',\n    displayed: true,\n    subSystem: 'Hyper',\n    location: 'NPPF',\n    program: 'EGS'\n  },\n  {\n    id: 4,\n    name: 'Flight',\n    displayed: true,\n    subSystem: 'Hyper',\n    location: 'NPPF',\n    program: 'EGS'\n  }\n];\n","import { Injectable } from '@angular/core';\n\nimport { Channel } from '../classes/channel';\nimport { CHANNELS } from '../mock-channels';\nimport { Observable, of } from 'rxjs';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChannelService {\n\n  constructor(private http: HttpClient) { }\n\n  private channelsUrl = 'api/channels';\n\n  // getChannels(search: string): Observable<Channel[]> {\n  //   return this.http.get<Channel[]>(this.channelsUrl, { params: { 'name': search} });\n  // }\n\n  getChannels(search: string): Observable<Channel[]> {\n    // TODO: send the message _after_ fetching the heroes\n    return of(CHANNELS);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Channel } from '../classes/channel';\nimport { Clip } from '../classes/clip';\nimport { ClipResponse } from '../classes/clip-response';\nimport { Observable, of } from 'rxjs';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClipService {\n\n  constructor(private http: HttpClient) { }\n\n  private clipsUrl = 'http://localhost:3000/api/clips';\n  private clipsSaveUrl = 'clipsSave';\n\n  getClips(channel: Channel): Observable<ClipResponse>{\n    return this.http.get<ClipResponse>(this.clipsUrl, { params: { channel_id: channel.id.toString() }});\n  }\n\n  saveClip(clip: Clip): void {\n    this.http.put(this.clipsSaveUrl, {\n      params: {\n        'clipId': clip.id,\n        'text': clip.text\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}